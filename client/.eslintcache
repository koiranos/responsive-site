[{"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\index.js":"1","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\reportWebVitals.js":"2","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\App.js":"3","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Web\\Web.js":"4","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Page\\Page.js":"5","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Home.js":"6","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Menu\\Menu.js":"7","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Panel\\Panel.js":"8","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\PanelPage\\PanelPage.js":"9","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\PanelMenu\\PanelMenu.js":"10","D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\CreatePage\\CreatePage.js":"11","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\index.js":"12","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\reportWebVitals.js":"13","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\App.js":"14","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Web\\Web.js":"15","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Home.js":"16","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Page\\Page.js":"17","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Menu\\Menu.js":"18","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\PanelMenu\\PanelMenu.js":"19","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\PanelPage\\PanelPage.js":"20","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Modals\\EditModal.js":"21","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Modals\\DeleteModal.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2935,"mtime":1607690315944,"results":"26","hashOfConfig":"24"},{"size":1498,"mtime":1607692070245,"results":"27","hashOfConfig":"24"},{"size":757,"mtime":1607605222000,"results":"28","hashOfConfig":"24"},{"size":2274,"mtime":1607643534000,"results":"29","hashOfConfig":"24"},{"size":1762,"mtime":1607689251060,"results":"30","hashOfConfig":"24"},{"size":360,"mtime":1607672784121,"results":"31","hashOfConfig":"24"},{"size":5951,"mtime":1607692277219,"results":"32","hashOfConfig":"24"},{"size":3060,"mtime":1607690756808,"results":"33","hashOfConfig":"24"},{"size":232,"mtime":1607692155706,"results":"34","hashOfConfig":"24"},{"size":500,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":661,"mtime":1607870145838,"results":"38","hashOfConfig":"36"},{"size":1621,"mtime":1607868398834,"results":"39","hashOfConfig":"36"},{"size":2393,"mtime":1607869320462,"results":"40","hashOfConfig":"36"},{"size":757,"mtime":1607868040778,"results":"41","hashOfConfig":"36"},{"size":2010,"mtime":1607867974131,"results":"42","hashOfConfig":"36"},{"size":1198,"mtime":1607867837783,"results":"43","hashOfConfig":"36"},{"size":6206,"mtime":1607870000771,"results":"44","hashOfConfig":"36"},{"size":7474,"mtime":1607869940403,"results":"45","hashOfConfig":"36"},{"size":1637,"mtime":1607869836432,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"jcziop",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1iuv0ku",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\index.js",[],["96","97"],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\reportWebVitals.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\App.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Web\\Web.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Page\\Page.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Home.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Menu\\Menu.js",["98"],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\Panel\\Panel.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\PanelPage\\PanelPage.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\PanelMenu\\PanelMenu.js",[],"D:\\ExtraFiles\\otherFiles\\coding\\react\\spa-admin-panel\\client\\src\\components\\CreatePage\\CreatePage.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\index.js",[],["99","100"],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\reportWebVitals.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\App.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Web\\Web.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Home.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Page\\Page.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Menu\\Menu.js",["101"],"\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, Button } from 'reactstrap';\r\nimport './Menu.css';\r\n\r\nconst Web = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const getPages = () => {\r\n        props.getpages();\r\n    }\r\n\r\n    const handleClick = event => {\r\n        let pageId = event.target.attributes[1].value;\r\n        let pageIndex = props.pages.findIndex(page => page.id == pageId);\r\n        props.onclick(props.pages[pageIndex].title, props.pages[pageIndex].description);\r\n    }\r\n\r\n    const spreadPages = () => {\r\n        let activePages = props.pages.filter(page => {\r\n            return page.isActive;\r\n        })\r\n\r\n        let pagesNumber = activePages.length;\r\n\r\n        let listItems = []\r\n        listItems = activePages.map(page => {\r\n            return (<NavItem key={page.id}>\r\n                <Link className=\"nav-link\" key={page.id} id={page.id} onClick={handleClick} to=\"/Page\" data-toggle=\"tooltip\" data-placement=\"bottom\" title={page.title} >{pagesNumber > 21? page.title.slice(0,5) + \"..\" : page.title}</Link>\r\n            </NavItem>)\r\n        })\r\n        return listItems;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Navbar color=\"primary\" dark expand=\"xs\">\r\n                <Link className=\"navbar-brand\" to=\"/\" ><img className=\"mr-3\" src=\"https://www.flaticon.com/svg/static/icons/svg/3081/3081367.svg\" alt=\"brand logo\" width=\"30px\"></img>Responsive Pages</Link>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                            {spreadPages()}\r\n                    </Nav>\r\n                    <Link to=\"/admin\"><Button onClick={getPages} color=\"secondary\">Admin Panel</Button>{' '}</Link>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Web;","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\PanelMenu\\PanelMenu.js",[],"C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\PanelPage\\PanelPage.js",["102"],"import React, { useState, useEffect } from 'react';\r\nimport './PanelPage.css';\r\nimport { Container, Row, Col, Table, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport EditModal from '../Modals/EditModal';\r\nimport DeleteModal from '../Modals/DeleteModal';\r\n\r\nconst PanelPage = props => {\r\n    \r\n    const [pages, setPages] = useState(props.pages);\r\n\r\n    const [editModal, setEditModal] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [addModal, setAddModal] = useState(false);\r\n\r\n    const [modalContent, setModalContent] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchAllData();\r\n      });\r\n\r\n    const fetchData = id => {\r\n        axios.get(`/api/pages/${id}`).then(res => {\r\n            setModalContent(res.data);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    //get pages\r\n    const fetchAllData = () => {\r\n        axios.get('/api/pages').then(response => setPages(response.data));\r\n    }\r\n\r\n    const handleDates = pagedate => {\r\n        let fdate = new Date(pagedate);\r\n        let newDate = fdate.toLocaleDateString() + \", \" + fdate.toLocaleTimeString();\r\n\r\n        return newDate;\r\n    }\r\n\r\n    const handlePageType = type => {\r\n        let typeName = \"\";\r\n        switch(type) {\r\n            case 0:\r\n                typeName = 'Menu';\r\n                break;\r\n            case 1:\r\n                typeName = \"Events\";\r\n                break;\r\n            case 2:\r\n                typeName = \"Content\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return typeName;\r\n    }\r\n\r\n\r\n    const toggle = (e) => {\r\n        let itemID = '';\r\n        let actionType = e.currentTarget.name;\r\n        if(actionType != 'close'){\r\n            itemID = e.currentTarget.id.slice(4,8);\r\n            if(itemID) {\r\n                fetchData(itemID);\r\n            }\r\n        }\r\n        \r\n        switch(actionType) {\r\n            case 'edit':\r\n                setEditModal(true);\r\n                break;\r\n            case 'add':\r\n                setAddModal(true);\r\n                break;\r\n            case 'delete':\r\n                setDeleteModal(true);\r\n                break;\r\n            default:\r\n                setEditModal(false);\r\n                setAddModal(false);\r\n                setDeleteModal(false);\r\n                break;\r\n\r\n        }\r\n    }\r\n        \r\n        const fillPages = () => {\r\n        const table = pages.map(page => {\r\n            return (<tr key={page.id}>\r\n                <td>{page.title}</td>\r\n                <td>{page.description}</td>\r\n                <td>{handlePageType(page.type)}</td>\r\n                <td>{handleDates(page.publishedOn)}</td>\r\n                <td>\r\n                   {page.isActive? <img src=\"https://www.flaticon.com/svg/static/icons/svg/463/463574.svg\" alt=\"active page\" width=\"20px\" ></img> : <img src=\"https://www.flaticon.com/svg/static/icons/svg/463/463612.svg\" alt=\"inactive page\" width=\"20px\" ></img>} \r\n                </td>\r\n                <td>\r\n                    <button name=\"edit\" className=\"manipulation-link\" id={`edt_${page.id}`} key={page.id} onClick={toggle} >\r\n                        <img className=\"img-icon\" src=\"https://www.flaticon.com/svg/static/icons/svg/364/364273.svg\" alt=\"Edit Page\" ></img>\r\n                    </button>\r\n                </td>\r\n                <td>\r\n                    <button name=\"delete\" className=\"manipulation-link\" id={`del_${page.id}`} key={page.id} onClick={toggle} >\r\n                        <img className=\"img-icon\" src=\"https://www.flaticon.com/svg/static/icons/svg/364/364296.svg\" alt=\"Delete Page\" ></img>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            )\r\n        });\r\n\r\n        return table;\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"myContainer\">\r\n            <Row className=\"container-row\">\r\n                <Col className=\"mt-5\">\r\n                    <Row className=\"content-row\">\r\n                        <Col xs=\"10\">\r\n                            <h3>Pages</h3>\r\n                            <p>This section presents the availiable pages that your website contains, their status and editing and previewing options</p>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <Button className=\"btn btn-success\" name=\"add\" id=\"add\" onClick={toggle} ><img className=\"mr-2\" src=\"https://www.flaticon.com/svg/static/icons/svg/189/189689.svg\" alt=\"\" width=\"20px\"  ></img>Create Page</Button>\r\n                        </Col>\r\n                        <Col xs=\"12\">\r\n                            <div className=\"table-responsive\">\r\n                            <Table className=\"text-center table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">PAGE</th>\r\n                                        <th scope=\"col\">DESCRIPTION</th>\r\n                                        <th scope=\"col\">TYPE</th>\r\n                                        <th scope=\"col\">PUBLISHED</th>\r\n                                        <th scope=\"col\">ACTIVE</th>\r\n                                        <th scope=\"col\">EDIT</th>\r\n                                        <th scope=\"col\">DELETE</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {fillPages()}\r\n                                </tbody>\r\n                            </Table>\r\n                            </div>\r\n                        </Col>\r\n                        <EditModal isOpen = {editModal} toggle={toggle} className=\"text-center\" content={modalContent} getpages={fetchAllData} ></EditModal>\r\n                        <EditModal isOpen = {addModal} toggle={toggle} className=\"text-center\" getpages={fetchAllData} ></EditModal>\r\n                        <DeleteModal isOpen = {deleteModal} toggle={toggle} className=\"text-center\" content={modalContent} getpages={fetchAllData} ></DeleteModal>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default PanelPage;","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Modals\\EditModal.js",["103","104","105","106","107"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport './ModalStyle.css';\r\n\r\nconst EditModal = (props) => {\r\n\r\n    const [objectState, setObjectState] = useState(props.content? props.content : {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        type: 0,\r\n        isActive: false,\r\n        publishedOn: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(props.content) {\r\n            setObjectState(props.content);\r\n        } else {\r\n            setObjectState({\r\n                id: null,\r\n                title: \"\",\r\n                description: \"\",\r\n                type: 0,\r\n                isActive: false,\r\n                publishedOn: \"\"\r\n            })\r\n\r\n            return function cleanup() {\r\n                let newObject = {...objectState};\r\n                setObjectState( newObject )\r\n            }\r\n        }\r\n      }, [props.content]);\r\n\r\n\r\n    const handleModalVisibility = ()  => {\r\n        let obj = {\r\n            currentTarget: {\r\n                id: 'tst_1234',\r\n                name: 'close'\r\n            }\r\n        }\r\n        props.toggle(obj);\r\n    }\r\n\r\n\r\n      const dateFormat = (date) => {\r\n          var newDate = (new Date(Date.now() - date)).toISOString().slice(0, -1);\r\n        return newDate;\r\n      }\r\n\r\n    const handleChange = e => {\r\n        let newStateObject = {...objectState}; // old values\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        switch(name) {\r\n            case 'title':\r\n                newStateObject.title = value; // new value\r\n                break;\r\n            case 'description':\r\n                newStateObject.description = value;\r\n                break;\r\n            case 'type':\r\n                let selection = e.currentTarget.value;\r\n                newStateObject.type = selection;\r\n                break;\r\n            case 'active':\r\n                let ischecked = e.currentTarget.checked;\r\n                newStateObject.isActive = ischecked;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setObjectState( newStateObject ); // setup new values\r\n    }\r\n\r\n    const validateForm = (title, description, infoBox) => {\r\n        infoBox.style.display = \"none\";\r\n        if (title.length > 50 && description.length > 200 ) {\r\n            infoBox.textContent = \"Warning! Title and Description are too long. (Title Max = 50 characters, Description Max = 200 characters) \";\r\n            infoBox.style.display = \"block\";\r\n            return false;\r\n        }else if(title.length > 50) {\r\n            infoBox.textContent = \"Warning! Title is too long. (Max = 50 characters) \";\r\n            infoBox.style.display = \"block\";\r\n            return false;\r\n\r\n        } else if(description.length > 200) {\r\n            infoBox.textContent = \"Warning! Description is too long. (Max = 200 characters) \";\r\n            infoBox.style.display = \"block\";\r\n            return false;\r\n        } else if(!title) {\r\n            infoBox.textContent = \"Warning! Title field is required\";\r\n            infoBox.style.display = \"block\";\r\n            return false;\r\n        }else {\r\n            return true;\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        //validation\r\n        let mdlTitle = document.querySelector('#title-mdl').value;\r\n        let mdlDescription = document.querySelector('#description-mdl').value;\r\n        let infoBox = document.querySelector('.response-info');\r\n\r\n        ;\r\n\r\n        if(validateForm(mdlTitle, mdlDescription, infoBox)) {\r\n            let url = \"\";\r\n            let data = {}\r\n            if(objectState.id) {\r\n                url = \"/api/pages/\" + objectState.id;\r\n                data = objectState;\r\n\r\n                axios.put(url, data)\r\n                .then((response) => {\r\n                    handleModalVisibility();\r\n                    props.getpages();\r\n                }, (error) => {\r\n                    let info = document.querySelector('.response-info');\r\n                    info.textContent = error + \". Please contact your administrator.\";\r\n                    info.style.display = \"block\";\r\n                }) \r\n\r\n            }else {\r\n                let url = \"/api/pages\"\r\n                var tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n                data = {\r\n                    title: objectState.title,\r\n                    description: objectState.description,\r\n                    type: objectState.type,\r\n                    isActive: objectState.isActive,\r\n                    publishedOn: dateFormat(tzoffset)\r\n                }\r\n\r\n                axios.post(url, data)\r\n                .then((response) => {\r\n                    if(response.status == 201) {\r\n                        handleModalVisibility();\r\n                        props.getpages();\r\n                    }\r\n                }, (error) => {\r\n                    let info = document.querySelector('.response-info');\r\n                    info.textContent = error + \". Please contact your administrator.\";\r\n                    info.style.display = \"block\";\r\n                })\r\n\r\n            }\r\n        }  \r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Modal className=\"myModal\" isOpen={props.isOpen} toggle={props.toggle}>\r\n        <ModalHeader toggle={props.toggle}>\r\n            <h2>{objectState.id? \"Edit Selected Page\" : \"Create Page\"}</h2>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <Form>\r\n                <FormGroup>\r\n                    <Label for=\"title\">Page Title</Label>\r\n                    <Input key=\"title_key\" onChange={handleChange} type=\"text\" name=\"title\" id=\"title-mdl\" value={objectState.title} required={true}></Input>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"description\">Page Description</Label>\r\n                  <Input key=\"descr_key\" onChange={handleChange} type=\"textarea\" name=\"description\" id=\"description-mdl\" value={objectState.description} ></Input>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                    <Col>\r\n                    <Label for=\"pageType\" >Type</Label>\r\n                    <Input key=\"type_key\" onChange={handleChange} type=\"select\" name=\"type\" id=\"pageType-mdl\">\r\n                        <option value=\"0\" selected={objectState.type == '0'? true : false} >Menu</option>\r\n                        <option value=\"1\" selected={objectState.type == '1'? true : false} >Events</option>\r\n                        <option value=\"2\" selected={objectState.type == '2'? true : false} >Content</option>\r\n                    </Input>\r\n                    </Col>\r\n                </FormGroup> \r\n\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input id=\"active-mdl\" key=\"active_key\" onChange={handleChange} name=\"active\" type=\"checkbox\" checked={objectState.isActive? true : false} />{' '}\r\n                    Active\r\n                  </Label>\r\n                </FormGroup> \r\n                <FormGroup>\r\n                    <Button className=\"mt-4\" onClick={handleSubmit}>{objectState.id? \"Save Changes\" : \"Submit Page\"}</Button>\r\n                    <span className=\"response-info text-white mt-2 bg-danger\"></span>\r\n                </FormGroup>\r\n            </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditModal;","C:\\Users\\panag\\Documents\\ordereze\\spa-admin-panel\\client\\src\\components\\Modals\\DeleteModal.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":22,"column":63,"nodeType":"114","messageId":"115","endLine":22,"endColumn":65},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"112","severity":1,"message":"113","line":18,"column":63,"nodeType":"114","messageId":"115","endLine":18,"endColumn":65},{"ruleId":"112","severity":1,"message":"118","line":62,"column":23,"nodeType":"114","messageId":"115","endLine":62,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":35,"column":10,"nodeType":"121","endLine":35,"endColumn":25,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"113","line":143,"column":40,"nodeType":"114","messageId":"115","endLine":143,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":179,"column":70,"nodeType":"114","messageId":"115","endLine":179,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":180,"column":70,"nodeType":"114","messageId":"115","endLine":180,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":181,"column":70,"nodeType":"114","messageId":"115","endLine":181,"endColumn":72},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["123"],["124"],"Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'objectState'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [objectState, props.content]",{"range":"128","text":"129"},[997,1012],"[objectState, props.content]"]